# coding: utf-8

"""
    spitfire API

    spitfire API documentation

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class ManagedUserDTO(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, activated=None, authorities=None, card_cvc=None, card_exp_month=None, card_exp_year=None, card_number=None, company_id=None, created_date=None, email=None, first_name=None, id=None, lang_key=None, last_modified_by=None, last_modified_date=None, last_name=None, login=None, password=None, phone_number=None, plan_id=None, position=None, profile_image_url=None):
        """
        ManagedUserDTO - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'activated': 'bool',
            'authorities': 'list[str]',
            'card_cvc': 'str',
            'card_exp_month': 'int',
            'card_exp_year': 'int',
            'card_number': 'str',
            'company_id': 'int',
            'created_date': 'datetime',
            'email': 'str',
            'first_name': 'str',
            'id': 'int',
            'lang_key': 'str',
            'last_modified_by': 'str',
            'last_modified_date': 'datetime',
            'last_name': 'str',
            'login': 'str',
            'password': 'str',
            'phone_number': 'str',
            'plan_id': 'int',
            'position': 'str',
            'profile_image_url': 'str'
        }

        self.attribute_map = {
            'activated': 'activated',
            'authorities': 'authorities',
            'card_cvc': 'card_cvc',
            'card_exp_month': 'card_exp_month',
            'card_exp_year': 'card_exp_year',
            'card_number': 'card_number',
            'company_id': 'companyId',
            'created_date': 'createdDate',
            'email': 'email',
            'first_name': 'firstName',
            'id': 'id',
            'lang_key': 'langKey',
            'last_modified_by': 'lastModifiedBy',
            'last_modified_date': 'lastModifiedDate',
            'last_name': 'lastName',
            'login': 'login',
            'password': 'password',
            'phone_number': 'phone_number',
            'plan_id': 'planId',
            'position': 'position',
            'profile_image_url': 'profileImageUrl'
        }

        self._activated = activated
        self._authorities = authorities
        self._card_cvc = card_cvc
        self._card_exp_month = card_exp_month
        self._card_exp_year = card_exp_year
        self._card_number = card_number
        self._company_id = company_id
        self._created_date = created_date
        self._email = email
        self._first_name = first_name
        self._id = id
        self._lang_key = lang_key
        self._last_modified_by = last_modified_by
        self._last_modified_date = last_modified_date
        self._last_name = last_name
        self._login = login
        self._password = password
        self._phone_number = phone_number
        self._plan_id = plan_id
        self._position = position
        self._profile_image_url = profile_image_url


    @property
    def activated(self):
        """
        Gets the activated of this ManagedUserDTO.


        :return: The activated of this ManagedUserDTO.
        :rtype: bool
        """
        return self._activated

    @activated.setter
    def activated(self, activated):
        """
        Sets the activated of this ManagedUserDTO.


        :param activated: The activated of this ManagedUserDTO.
        :type: bool
        """

        self._activated = activated

    @property
    def authorities(self):
        """
        Gets the authorities of this ManagedUserDTO.


        :return: The authorities of this ManagedUserDTO.
        :rtype: list[str]
        """
        return self._authorities

    @authorities.setter
    def authorities(self, authorities):
        """
        Sets the authorities of this ManagedUserDTO.


        :param authorities: The authorities of this ManagedUserDTO.
        :type: list[str]
        """

        self._authorities = authorities

    @property
    def card_cvc(self):
        """
        Gets the card_cvc of this ManagedUserDTO.


        :return: The card_cvc of this ManagedUserDTO.
        :rtype: str
        """
        return self._card_cvc

    @card_cvc.setter
    def card_cvc(self, card_cvc):
        """
        Sets the card_cvc of this ManagedUserDTO.


        :param card_cvc: The card_cvc of this ManagedUserDTO.
        :type: str
        """

        self._card_cvc = card_cvc

    @property
    def card_exp_month(self):
        """
        Gets the card_exp_month of this ManagedUserDTO.


        :return: The card_exp_month of this ManagedUserDTO.
        :rtype: int
        """
        return self._card_exp_month

    @card_exp_month.setter
    def card_exp_month(self, card_exp_month):
        """
        Sets the card_exp_month of this ManagedUserDTO.


        :param card_exp_month: The card_exp_month of this ManagedUserDTO.
        :type: int
        """

        self._card_exp_month = card_exp_month

    @property
    def card_exp_year(self):
        """
        Gets the card_exp_year of this ManagedUserDTO.


        :return: The card_exp_year of this ManagedUserDTO.
        :rtype: int
        """
        return self._card_exp_year

    @card_exp_year.setter
    def card_exp_year(self, card_exp_year):
        """
        Sets the card_exp_year of this ManagedUserDTO.


        :param card_exp_year: The card_exp_year of this ManagedUserDTO.
        :type: int
        """

        self._card_exp_year = card_exp_year

    @property
    def card_number(self):
        """
        Gets the card_number of this ManagedUserDTO.


        :return: The card_number of this ManagedUserDTO.
        :rtype: str
        """
        return self._card_number

    @card_number.setter
    def card_number(self, card_number):
        """
        Sets the card_number of this ManagedUserDTO.


        :param card_number: The card_number of this ManagedUserDTO.
        :type: str
        """

        self._card_number = card_number

    @property
    def company_id(self):
        """
        Gets the company_id of this ManagedUserDTO.


        :return: The company_id of this ManagedUserDTO.
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """
        Sets the company_id of this ManagedUserDTO.


        :param company_id: The company_id of this ManagedUserDTO.
        :type: int
        """

        self._company_id = company_id

    @property
    def created_date(self):
        """
        Gets the created_date of this ManagedUserDTO.


        :return: The created_date of this ManagedUserDTO.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """
        Sets the created_date of this ManagedUserDTO.


        :param created_date: The created_date of this ManagedUserDTO.
        :type: datetime
        """

        self._created_date = created_date

    @property
    def email(self):
        """
        Gets the email of this ManagedUserDTO.


        :return: The email of this ManagedUserDTO.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """
        Sets the email of this ManagedUserDTO.


        :param email: The email of this ManagedUserDTO.
        :type: str
        """

        self._email = email

    @property
    def first_name(self):
        """
        Gets the first_name of this ManagedUserDTO.


        :return: The first_name of this ManagedUserDTO.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """
        Sets the first_name of this ManagedUserDTO.


        :param first_name: The first_name of this ManagedUserDTO.
        :type: str
        """

        self._first_name = first_name

    @property
    def id(self):
        """
        Gets the id of this ManagedUserDTO.


        :return: The id of this ManagedUserDTO.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this ManagedUserDTO.


        :param id: The id of this ManagedUserDTO.
        :type: int
        """

        self._id = id

    @property
    def lang_key(self):
        """
        Gets the lang_key of this ManagedUserDTO.


        :return: The lang_key of this ManagedUserDTO.
        :rtype: str
        """
        return self._lang_key

    @lang_key.setter
    def lang_key(self, lang_key):
        """
        Sets the lang_key of this ManagedUserDTO.


        :param lang_key: The lang_key of this ManagedUserDTO.
        :type: str
        """

        self._lang_key = lang_key

    @property
    def last_modified_by(self):
        """
        Gets the last_modified_by of this ManagedUserDTO.


        :return: The last_modified_by of this ManagedUserDTO.
        :rtype: str
        """
        return self._last_modified_by

    @last_modified_by.setter
    def last_modified_by(self, last_modified_by):
        """
        Sets the last_modified_by of this ManagedUserDTO.


        :param last_modified_by: The last_modified_by of this ManagedUserDTO.
        :type: str
        """

        self._last_modified_by = last_modified_by

    @property
    def last_modified_date(self):
        """
        Gets the last_modified_date of this ManagedUserDTO.


        :return: The last_modified_date of this ManagedUserDTO.
        :rtype: datetime
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """
        Sets the last_modified_date of this ManagedUserDTO.


        :param last_modified_date: The last_modified_date of this ManagedUserDTO.
        :type: datetime
        """

        self._last_modified_date = last_modified_date

    @property
    def last_name(self):
        """
        Gets the last_name of this ManagedUserDTO.


        :return: The last_name of this ManagedUserDTO.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """
        Sets the last_name of this ManagedUserDTO.


        :param last_name: The last_name of this ManagedUserDTO.
        :type: str
        """

        self._last_name = last_name

    @property
    def login(self):
        """
        Gets the login of this ManagedUserDTO.


        :return: The login of this ManagedUserDTO.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login):
        """
        Sets the login of this ManagedUserDTO.


        :param login: The login of this ManagedUserDTO.
        :type: str
        """

        self._login = login

    @property
    def password(self):
        """
        Gets the password of this ManagedUserDTO.


        :return: The password of this ManagedUserDTO.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """
        Sets the password of this ManagedUserDTO.


        :param password: The password of this ManagedUserDTO.
        :type: str
        """

        self._password = password

    @property
    def phone_number(self):
        """
        Gets the phone_number of this ManagedUserDTO.


        :return: The phone_number of this ManagedUserDTO.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """
        Sets the phone_number of this ManagedUserDTO.


        :param phone_number: The phone_number of this ManagedUserDTO.
        :type: str
        """

        self._phone_number = phone_number

    @property
    def plan_id(self):
        """
        Gets the plan_id of this ManagedUserDTO.


        :return: The plan_id of this ManagedUserDTO.
        :rtype: int
        """
        return self._plan_id

    @plan_id.setter
    def plan_id(self, plan_id):
        """
        Sets the plan_id of this ManagedUserDTO.


        :param plan_id: The plan_id of this ManagedUserDTO.
        :type: int
        """

        self._plan_id = plan_id

    @property
    def position(self):
        """
        Gets the position of this ManagedUserDTO.


        :return: The position of this ManagedUserDTO.
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """
        Sets the position of this ManagedUserDTO.


        :param position: The position of this ManagedUserDTO.
        :type: str
        """

        self._position = position

    @property
    def profile_image_url(self):
        """
        Gets the profile_image_url of this ManagedUserDTO.


        :return: The profile_image_url of this ManagedUserDTO.
        :rtype: str
        """
        return self._profile_image_url

    @profile_image_url.setter
    def profile_image_url(self, profile_image_url):
        """
        Sets the profile_image_url of this ManagedUserDTO.


        :param profile_image_url: The profile_image_url of this ManagedUserDTO.
        :type: str
        """

        self._profile_image_url = profile_image_url

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
